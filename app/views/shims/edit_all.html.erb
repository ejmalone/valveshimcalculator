<% action, label = if params[:update]
  [ :update_all, "New" ]
else
  [ :create_all, "Current" ]
end
%>

<h1>Editing shims</h1>

<%= form_tag({ action: action }, method: :put, data: { controller: "valve-gaps", action: "valve-gaps#validate" }.merge_stimulus_data(shim_data_controller)) do %>
  <%= hidden_field_tag(:valve_adjustment_id, params[:valve_adjustment_id]) if params[:valve_adjustment_id].present? %>

  <div class="alert alert-info" role="alert">
    Note: All shims must be in mm between <%= Shim::SIZE_LIMITS.first %> and <%= Shim::SIZE_LIMITS.last %> (enter 2.61mm as "261")

    <% if params[:update] %>
      <hr>
      <strong>Now add these shims to the valves and re-measure the gaps</strong>
    <% end %>
  </div>

  <%= form_errors_element(:shim, :valve_gaps) %>

  <% @engine.cylinders.each_with_index do |cylinder, cyl_index| %>
    <%= field_set_tag "Cylinder #{ cyl_index + 1 }" do %>
      <% cylinder.valves.each_with_index do |valve, valve_index| %>
        <div class="row mb-3">
          <div class="col-sm-4 col-lg-3 col-xl-2">
            <%= valve_form_label(valve) %>
          </div>

          <div class="col-sm-4 col-lg-3 col-xl-2">
            <%= label_tag "#{ label } gap", nil, for: "_valve_#{ valve.id }_gap", class: "form-label" %>
            <%= text_field_tag "[valve][#{ valve.id }][gap]", valve.gap, data: { valve_gaps_target: "gap" }, class: "form-control" %>
          </div>

          <div class="col-sm-4 col-lg-3 col-xl-2">
            <%= label_tag "#{ label } shim size", nil, for: "_valve_#{ valve.id }_thickness", class: "form-label"  %>
            <%= text_field_tag "[valve][#{ valve.id }][thickness]", valve.shim&.thickness, readonly: params[:update], data: { shim_target: "thickness" }, class: "form-control" %>
          </div>
        </div>
      <% end %>
    <% end %>
  <% end %>

  <%= submit_tag "Submit", class: "btn btn-primary" %>
<% end %>